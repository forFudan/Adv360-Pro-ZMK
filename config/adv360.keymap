
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define AS(keycode) &as LS(keycode) keycode

/ {
        behaviors {
            as: auto_shift {
                compatible = "zmk,behavior-hold-tap";
                label = "AUTO_SHIFT";
                #binding-cells = <2>;
                tapping_term_ms = <200>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 AS(EQUAL)     &kp N1        &kp N2    &kp N3     &kp N4  &kp N5            &tog 1                                                                 &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0      AS(MINUS)
 &lt 1 TAB      AS(Q)         AS(W)              AS(E)   AS(R)   AS(T)       &none                                                                 &none   AS(Y)   AS(U)      AS(I)     AS(O)     AS(P)  &kp BACKSPACE
 &lt 6 ESC      AS(A)         AS(S)              AS(D)   AS(F)   AS(G)       &none  &kp RCTRL  &kp LGUI                   &kp LGUI  &kp RCTRL      &none   AS(H)   AS(J)      AS(K)     AS(L)  AS(SEMI)        AS(SQT)
 &kp LSHFT      AS(Z)         AS(X)              AS(C)   AS(V)   AS(B)       &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   AS(N)   AS(M)  AS(COMMA)   AS(DOT)  AS(FSLH)      &kp ENTER
 &kp LCTRL  AS(GRAVE)  &kp LEFT_ALT  &kp LEFT  &kp RIGHT                     &mo 4    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP   &kp DOWN  AS(LBKT)  AS(RBKT)          &mo 2
            >;
        };

        layer_keypad {
            bindings = <
  &none   &none   &none   &none   &none   &none            &trans                                                   &mo 3   &none  &kp KP_NUM     &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &none
  &none   &none   &none   &none   &none   &none             &none                                                   &none   &none   &kp KP_N7        &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &none
  &none   &none   &none   &none   &none   &none             &none  &trans  &trans                  &trans  &trans   &none   &none   &kp KP_N4        &kp KP_N5      &kp KP_N6      &kp KP_PLUS   &none
  &none   &none   &none   &none   &none   &none             &none   &none  &trans   &none   &none  &trans   &none   &none   &none   &kp KP_N1        &kp KP_N2      &kp KP_N3     &kp KP_ENTER   &none
  &none   &none   &none   &none   &none                    &trans  &trans  &trans                  &trans  &trans  &trans               &none  &kp KP_NUMBER_0     &kp KP_DOT            &none   &none
            >;
        };

        layer_fn {
            bindings = <
   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
   &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &kp CAPS  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
   &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
   &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_lower {
            bindings = <
 &trans           &trans  &trans    &trans      &trans       &trans            &trans                                                  &trans     &trans          &trans             &trans            &trans             &trans         &trans
 &trans           &trans  &trans    &trans      &trans       &trans            &trans                                                  &trans     &trans       &kp MINUS          &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
 &trans  &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT            &trans  &trans  &trans                  &trans  &trans  &trans  &kp CARET   &kp AMPERSAND          &kp ASTRK          &kp LPAR           &kp RPAR        &kp DQT
 &trans           &trans  &trans    &trans      &trans       &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &kp UNDERSCORE           &kp PLUS          &kp LBRC           &kp RBRC       &kp PIPE
 &trans           &trans  &trans    &trans      &trans                         &trans  &trans  &trans                  &trans  &trans  &trans                     &trans  &kp C_VOLUME_DOWN        &kp C_MUTE    &kp C_VOLUME_UP         &trans
            >;
        };

        layer_upper {
            bindings = <
 &trans        &trans        &trans        &trans        &trans        &trans            &trans                                                  &trans        &trans        &trans        &trans        &trans        &trans  &trans
 &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &trans                                                  &trans        &kp F6        &kp F7        &kp F8        &kp F9       &kp F10  &trans
 &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &trans  &trans  &trans                  &trans  &trans  &trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
 &trans       &kp F11       &kp F12        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans
 &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans                  &trans  &trans  &trans                      &trans        &trans        &trans        &trans  &trans
            >;
        };

        layer_navigation {
            bindings = <
 &trans  &trans  &trans  &trans  &trans           &trans            &trans                                                  &trans    &trans       &trans       &trans         &trans   &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &kp PRINTSCREEN            &trans                                                  &trans     &none  &kp PAGE_UP       &kp UP  &kp PAGE_DOWN  &kp INS  &trans
 &trans  &trans  &trans  &trans  &trans       &kp K_CALC            &trans  &trans  &trans                  &trans  &trans  &trans     &none     &kp LEFT     &kp DOWN      &kp RIGHT  &kp DEL   &none
 &trans  &trans  &trans  &trans  &trans           &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp HOME      &kp END  &kp PAGE_UP  &kp PAGE_DOWN   &trans  &trans
 &trans  &trans  &trans  &trans  &trans                             &trans  &trans  &trans                  &trans  &trans  &trans                 &trans       &trans         &trans   &trans  &trans
            >;
        };

    };
};
